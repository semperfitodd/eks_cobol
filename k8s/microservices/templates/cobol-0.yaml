apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.cobol0.name }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.cobol0.name }}-pv
  namespace: {{ .Values.cobol0.name }}
spec:
  capacity:
    storage: {{ .Values.global.efs_cobol_0.storage.size }}
  volumeMode: Filesystem
  accessModes:
{{ toYaml .Values.global.efs_cobol_0.storage.accessModes | indent 4 }}
  persistentVolumeReclaimPolicy: {{ .Values.global.efs_cobol_0.storage.reclaimPolicy }}
  storageClassName: {{ .Values.global.efs_cobol_0.storage.storageClassName }}
  csi:
    driver: efs.csi.aws.com
    volumeHandle: {{ .Values.global.efs_cobol_0.volumeHandle }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.cobol0.name }}-pvc
  namespace: {{ .Values.cobol0.name }}
spec:
  accessModes:
{{ toYaml .Values.global.efs_cobol_0.storage.accessModes | indent 4 }}
  resources:
    requests:
      storage: {{ .Values.global.efs_cobol_0.storage.size }}
  storageClassName: {{ .Values.global.efs_cobol_0.storage.storageClassName }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.cobol0.name }}-cronjob
  namespace: {{ .Values.cobol0.name }}
spec:
  schedule: {{ .Values.cobol0.schedule }}
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: {{ .Values.cobol0.name }}-container
              image: "{{ .Values.cobol0.image.repository }}:{{ .Values.cobol0.image.tag }}"
              imagePullPolicy: {{ .Values.cobol0.image.pullPolicy }}
              env:
                - name: INPUT_FILE
                  value: "{{ .Values.cobol0.environment.INPUT_FILE }}"
                - name: OUTPUT_FILE
                  value: "{{ .Values.cobol0.environment.OUTPUT_FILE }}"
              volumeMounts:
                - name: efs-volume
                  mountPath: /mnt/efs
              resources:
                requests:
                  cpu: "{{ .Values.cobol0.resources.requests.cpu }}"
                  memory: "{{ .Values.cobol0.resources.requests.memory }}"
                limits:
                  cpu: "{{ .Values.cobol0.resources.limits.cpu }}"
                  memory: "{{ .Values.cobol0.resources.limits.memory }}"
          volumes:
            - name: efs-volume
              persistentVolumeClaim:
                claimName: {{ .Values.cobol0.name }}-pvc
          nodeSelector:
            gpu: {{ .Values.cobol0.nodeSelector.gpu | quote }}
